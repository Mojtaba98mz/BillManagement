name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Check out the repository code

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # Use Java 17 (or your preferred version)
          distribution: 'temurin'  # Use Temurin JDK (or another distribution)

      - name: Build with Maven
        run: mvn clean package  # Build the project and run tests

      - name: Run Tests
        run: mvn verify  # Run unit tests (optional, as `package` already runs tests)
      - name: Upload JAR as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/BillManagement-0.0.1-SNAPSHOT.jar  # Upload the generated JAR file
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.BILL_MANAGEMENT_CD }}

      - name: Add SSH Host to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Remove Old Jar on Server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          rm -f ${{ secrets.DEPLOY_PATH }}/app.jar
          EOF

      - name: Download JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: app-jar  # Download the artifact uploaded in the build job

      - name: Copy Files to Server
        run: |
          scp BillManagement-0.0.1-SNAPSHOT.jar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_PATH }}/app.jar

      - name: Run Deployment Script
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd ${{ secrets.DEPLOY_PATH }}
          ./deploy.sh
          EOF


      

